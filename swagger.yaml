openapi: 3.0.0
info:
  title: UserHub API
  version: 1.0.0
  description: |
    üìò **Documentaci√≥ de l'API UserHub**

    Aquesta API senzilla permet gestionar usuaris amb operacions CRUD:

    - üîç Llistar usuaris (`GET /usuaris`)
    - ‚ûï Crear un usuari (`POST /usuaris`)
    - ‚úèÔ∏è Actualitzar un usuari (`PUT /usuaris/{id}`)
    - ‚ùå Esborrar un usuari (`DELETE /usuaris/{id}`)

    Tamb√© inclou una ruta b√†sica (`GET /`) que mostra un missatge HTML de benvinguda.

    üëâ Consulta cada endpoint per veure exemples i par√†metres disponibles.
servers:
  - url: http://localhost:3000
    description: Servidor local
paths:
  /:
    get:
      summary: P√†gina principal
      description: |
        Ruta b√†sica. 
        Mostra un missatge HTML amb el t√≠tol de l'aplicaci√≥.

        Exemple URL: [/](http://localhost:3000/)
      responses:
        '200':
          description: HTML amb t√≠tol de l'aplicaci√≥.
          content:
            text/html:
              schema:
                type: string
                example: <h1>APLICACI√ì PER LA GESTI√ì D'USUARIS</h1>
  /usuaris:
    get:
      summary: Obt√© una llista d'usuaris
      description: |
        GET /usuaris - Retorna tots els usuaris o els filtra per nom i al√ßada amb par√†metres de query.

        Exemple URLs:
        [/usuaris](http://localhost:3000/usuaris)
        [/usuaris?nom=Maria&alcada=160](http://localhost:3000/usuaris?nom=Maria&alcada=160)
      parameters:
        - in: query
          name: nom
          schema:
            type: string
          description: Filtra per nom de l'usuari
        - in: query
          name: alcada
          schema:
            type: integer
          description: Filtra per al√ßada de l'usuari
      responses:
        '200':
          description: Llista d'usuaris trobats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuari'
        '404':
          description: Cap usuari trobat
    post:
      summary: Crea un nou usuari
      description: |
        POST /usuaris - Afegeix un nou usuari amb nom i al√ßada.

        Exemple JSON:
        {
          "nom": "Ramon",
          "alcada": 180
        }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuariInput'
      responses:
        '201':
          description: Usuari creat correctament
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuari'
  /usuaris/{id}:
    get:
      summary: Obt√© un usuari per ID
      description: |
        GET /usuaris/:id - Retorna l'usuari amb l'ID especificat via par√†metres de ruta.

        Exemple URL: [/usuaris/2](http://localhost:3000/usuaris/2)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de l'usuari
      responses:
        '200':
          description: Usuari trobat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuari'
        '404':
          description: Usuari no trobat
    put:
      summary: Actualitza un usuari per ID
      description: |
        PUT /usuaris/:id - Actualitza el nom i l'al√ßada de l'usuari amb l'ID especificat.

        Exemple JSON:
        {
          "alcada": 185
        }
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de l'usuari
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuariInput'
      responses:
        '200':
          description: Usuari actualitzat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuari'
        '404':
          description: Usuari no trobat
    delete:
      summary: Esborra un usuari per ID
      description: |
        DELETE /usuaris/:id - Esborra l'usuari amb l'ID especificat.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de l'usuari
      responses:
        '200':
          description: Usuari esborrat correctament
          content:
            text/plain:
              schema:
                type: string
                example: Usuari 2 esborrat
        '404':
          description: Usuari no trobat
components:
  schemas:
    Usuari:
      type: object
      properties:
        id:
          type: integer
          example: 2
        nom:
          type: string
          example: "Maria"
        alcada:
          type: integer
          example: 160
    UsuariInput:
      type: object
      required:
        - nom
        - alcada
      properties:
        nom:
          type: string
          example: "Ramon"
        alcada:
          type: integer
          example: 180
